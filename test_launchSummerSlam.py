# Generated by Selenium IDE
import json
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.common.desired_capabilities import DesiredCapa
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait

class __int__(TestLaunchSummerSlam):
  def __init__(self):
    self.driver = None
    self.driver = webdriver
    self.vars = {}

  def setup_method(self):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_launchsummerslam(self):
    # Test name: Launch Summer Slam
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://www.peacocktv.com/")
    # 2 | setWindowSize | 1421x952 | 
    self.driver.set_window_size(1421, 952)
    # 3 | mouseOver | css=.cQKmdN | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".cQKmdN")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 4 | mouseOut | css=.cQKmdN | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 5 | click | css=.fCrQHM | 
    self.driver.find_element(By.CSS_SELECTOR, ".fCrQHM").click()
    # 6 | mouseOver | css=.enKliZ | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".enKliZ")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 7 | mouseOver | css=.enKliZ | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".enKliZ")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | mouseOut | css=.enKliZ | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 9 | type | id=email | cclevenger77@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("cclevenger77@gmail.com")
    # 10 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 11 | mouseOver | css=.enKliZ | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".enKliZ")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 12 | click | css=.enKliZ | 
    self.driver.find_element(By.CSS_SELECTOR, ".enKliZ").click()
    # 13 | mouseOut | css=.enKliZ | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 14 | type | id=password | Cheeto2021!
    self.driver.find_element(By.ID, "password").send_keys("Cheeto2021!")
    # 15 | click | css=.enKliZ | 
    self.driver.find_element(By.CSS_SELECTOR, ".enKliZ").click()
    # 16 | click | css=.swiper-slide-active > .profiles__avatar | 
    self.driver.find_element(By.CSS_SELECTOR, ".swiper-slide-active > .profiles__avatar").click()
    # 17 | mouseOver | linkText=WWE | 
    element = self.driver.find_element(By.LINK_TEXT, "WWE")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 18 | click | linkText=WWE | 
    self.driver.find_element(By.LINK_TEXT, "WWE").click()
    # 19 | mouseOut | linkText=WWE | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 20 | click | css=.manhattan-sle-asset-item__content-details | 
    self.driver.find_element(By.CSS_SELECTOR, ".manhattan-sle-asset-item__content-details").click()
    # 21 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 22 | click | css=.watch-btn--expanded | 
    self.driver.find_element(By.CSS_SELECTOR, ".watch-btn--expanded").click()
  
